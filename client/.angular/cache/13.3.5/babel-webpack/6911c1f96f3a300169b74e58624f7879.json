{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/http/http.service\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(router, httpService) {\n      this.router = router;\n      this.httpService = httpService;\n    }\n\n    setToken(token) {\n      return localStorage.setItem('token', token);\n    }\n\n    getToken() {\n      return localStorage.getItem('token');\n    }\n\n    signIn(data) {\n      return this.httpService.post(`${environment.authenticationEndpoint}/signin`, data).pipe(map(response => {\n        this.setToken(response.accessToken);\n        return response;\n      }));\n    }\n\n    signUp(data) {\n      return this.httpService.post(`${environment.authenticationEndpoint}/signup`, data);\n    }\n\n    logout() {\n      localStorage.removeItem('token');\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpService));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}