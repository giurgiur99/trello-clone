{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../share/authentication.service\";\nimport * as i4 from \"src/app/core/services/notification.service\";\nimport * as i5 from \"src/app/core/services/custom-validation.service\";\n\nfunction SignUpComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" You must provide a \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"name\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction SignUpComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name must be less than 40 characteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" You must provide a \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"username\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction SignUpComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Letters, numbers, dashes, and underscores only. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must be greater than 4 and less than 20 characteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" You must provide a \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"password\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction SignUpComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Letters, numbers, dashes, and password only. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must be greater than 6 and less than 30 characteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" You must provide a \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"email\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction SignUpComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email must be less than 40 characteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SignUpComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Not a email valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let SignUpComponent = /*#__PURE__*/(() => {\n  class SignUpComponent {\n    constructor(router, formBuilder, authenticationService, notificationService, customValidation) {\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.authenticationService = authenticationService;\n      this.notificationService = notificationService;\n      this.customValidation = customValidation;\n    }\n\n    ngOnInit() {\n      this.createFormGroup();\n    }\n\n    signUp() {\n      this.authenticationService.signUp(this.signUpForm.value).subscribe(apiResponse => {\n        this.signUpForm.reset();\n        this.notificationService.open(apiResponse.message);\n        this.router.navigate(['auth/signin']);\n      }, error => {\n        this.notificationService.open(error, 'failed');\n      });\n    }\n\n    createFormGroup() {\n      this.signUpForm = this.formBuilder.group({\n        name: ['', [Validators.required, Validators.maxLength(40)]],\n        username: ['', Validators.compose([Validators.required, this.customValidation.MinLengthAndMaxlengthValidator(4, 20), this.customValidation.PatternAndMinLengthValidator(4)])],\n        password: ['', Validators.compose([Validators.required, this.customValidation.MinLengthAndMaxlengthValidator(6, 30), this.customValidation.PatternAndMinLengthValidator(6)])],\n        email: ['', Validators.compose([Validators.required, Validators.maxLength(40), Validators.email])]\n      });\n    }\n\n    goToSignIn() {\n      this.router.navigate(['auth/signin']);\n    }\n\n    get getSignUpForm() {\n      return this.signUpForm.controls;\n    }\n\n  }\n\n  SignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n    return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(i5.CustomValidationService));\n  };\n\n  SignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignUpComponent,\n    selectors: [[\"app-sign-up\"]],\n    decls: 37,\n    vars: 13,\n    consts: [[\"fxLayout\", \"column\", 1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [\"fxFlexAlign\", \"center\"], [\"matInput\", \"\", \"id\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"required\", \"\"], [\"matInput\", \"\", \"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"matInput\", \"\", \"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"email@gmail.com\", \"required\", \"\"], [\"color\", \"primary\", \"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function SignUpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.signUp();\n        });\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵtemplate(7, SignUpComponent_mat_error_7_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(8, SignUpComponent_mat_error_8_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵtemplate(14, SignUpComponent_mat_error_14_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(15, SignUpComponent_mat_error_15_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(16, SignUpComponent_mat_error_16_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"mat-form-field\")(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Enter your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 5);\n        i0.ɵɵtemplate(22, SignUpComponent_mat_error_22_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(23, SignUpComponent_mat_error_23_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(24, SignUpComponent_mat_error_24_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"br\");\n        i0.ɵɵelementStart(26, \"mat-form-field\")(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Enter your email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 6);\n        i0.ɵɵtemplate(30, SignUpComponent_mat_error_30_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(31, SignUpComponent_mat_error_31_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(32, SignUpComponent_mat_error_32_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function SignUpComponent_Template_button_click_33_listener() {\n          return ctx.goToSignIn();\n        });\n        i0.ɵɵtext(34, \"Sign in instead\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 8);\n        i0.ɵɵtext(36, \"Register\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.name.errors == null ? null : ctx.getSignUpForm.name.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.name.errors == null ? null : ctx.getSignUpForm.name.errors.maxlength);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.username.errors == null ? null : ctx.getSignUpForm.username.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.username.errors == null ? null : ctx.getSignUpForm.username.errors.invalidPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.username.errors == null ? null : ctx.getSignUpForm.username.errors.MinLengthAndMaxlengthValidator);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.password.errors == null ? null : ctx.getSignUpForm.password.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.password.errors == null ? null : ctx.getSignUpForm.password.errors.invalidPassword);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.password.errors == null ? null : ctx.getSignUpForm.password.errors.MinLengthAndMaxlengthValidator);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.email.errors == null ? null : ctx.getSignUpForm.email.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.email.errors == null ? null : ctx.getSignUpForm.email.errors.maxlength);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getSignUpForm.email.errors == null ? null : ctx.getSignUpForm.email.errors.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.signUpForm.invalid);\n      }\n    },\n    styles: [\"\"]\n  });\n  return SignUpComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}