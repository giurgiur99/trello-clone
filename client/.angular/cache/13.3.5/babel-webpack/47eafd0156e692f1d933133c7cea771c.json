{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FileUploader } from 'ng2-file-upload';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../share/card.service\";\nimport * as i2 from \"src/app/core/services/notification.service\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"../../../../shared/directive/input-text-filter/input-text-filter.directive\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"ng2-file-upload\";\nimport * as i13 from \"@angular/material/list\";\n\nfunction CardDetailsComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CardDetailsComponent_div_21_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.closeCardForm(ctx_r5.card.description);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 22)(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"Save \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(17);\n\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !_r0.valid);\n  }\n}\n\nfunction CardDetailsComponent_mat_list_item_34_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 31);\n  }\n\n  if (rf & 2) {\n    const attachment_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate1(\"src\", \"data:image/jpeg;base64,\", attachment_r7.file.data, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction CardDetailsComponent_mat_list_item_34_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 32)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r8 = i0.ɵɵnextContext().index;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.attachmentExtensions[i_r8], \"\");\n  }\n}\n\nfunction CardDetailsComponent_mat_list_item_34_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CardDetailsComponent_mat_list_item_34_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const attachment_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.setCover(ctx_r16.card.id, attachment_r7.id);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"add_photo_alternate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"Add Cover \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CardDetailsComponent_mat_list_item_34_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CardDetailsComponent_mat_list_item_34_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const attachment_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.removeCover(ctx_r19.card.id, attachment_r7.id);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"Remove cover \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CardDetailsComponent_mat_list_item_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\", 23)(1, \"div\", 24)(2, \"div\", 25);\n    i0.ɵɵtemplate(3, CardDetailsComponent_mat_list_item_34_img_3_Template, 1, 1, \"img\", 26);\n    i0.ɵɵtemplate(4, CardDetailsComponent_mat_list_item_34_ng_template_4_Template, 3, 1, \"ng-template\", null, 27, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 28)(7, \"div\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 10);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 10)(13, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CardDetailsComponent_mat_list_item_34_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const attachment_r7 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.deleteAttachmentById(attachment_r7.id);\n    });\n    i0.ɵɵelementStart(14, \"mat-icon\");\n    i0.ɵɵtext(15, \"delete_permanent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \"Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, CardDetailsComponent_mat_list_item_34_button_17_Template, 4, 0, \"button\", 30);\n    i0.ɵɵtemplate(18, CardDetailsComponent_mat_list_item_34_button_18_Template, 4, 0, \"button\", 30);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const attachment_r7 = ctx.$implicit;\n\n    const _r10 = i0.ɵɵreference(5);\n\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", attachment_r7.contentType === \"image/jpg\" || attachment_r7.contentType === \"image/png\" || attachment_r7.contentType === \"image/jpeg\" || attachment_r7.contentType === \"image/gif\")(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Name: \", attachment_r7.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Date: \", i0.ɵɵpipeBind2(11, 6, attachment_r7.createdDate, \"dd/MM/yyyy h:mm:ss a\"), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", (attachment_r7.contentType === \"image/jpg\" || attachment_r7.contentType === \"image/png\" || attachment_r7.contentType === \"image/jpeg\") && (ctx_r4.card.cover == null ? null : ctx_r4.card.cover.idAttachment) !== attachment_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r4.card.cover == null ? null : ctx_r4.card.cover.idAttachment) === attachment_r7.id);\n  }\n}\n\nexport let CardDetailsComponent = /*#__PURE__*/(() => {\n  class CardDetailsComponent {\n    constructor(data, cardService, notificationService) {\n      this.data = data;\n      this.cardService = cardService;\n      this.notificationService = notificationService;\n      this.card = {};\n      this.cardUpdate = {};\n      this.attachmentExtensions = [];\n      this.isImage = false;\n      this.IsShown = false;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.findCardById();\n        let maxFileSize5MB = 5 * 1024 * 1024;\n        this.uploader = new FileUploader({\n          isHTML5: true,\n          maxFileSize: maxFileSize5MB,\n          autoUpload: false,\n          headers: [{\n            name: 'Content-Type',\n            value: 'application/octed-stream'\n          }]\n        });\n\n        this.uploader.onWhenAddingFileFailed = (item, filter) => {\n          let message = '';\n\n          switch (filter.name) {\n            case 'fileSize':\n              message = 'The file\"' + item.name + '\" is ' + this.formatBytes(item.size) + ', this exceeds the maximum allowed size of ' + this.formatBytes(maxFileSize5MB);\n              break;\n\n            default:\n              message = 'Error trying to upload file ' + item.name;\n              break;\n          }\n\n          const durationIn5Seconds = 5 * 1000;\n          this.notificationService.open(message, 'Warning', durationIn5Seconds);\n        };\n\n        this.uploader.onAfterAddingAll = files => {\n          this.uploadAttachments(files);\n        };\n\n        this.uploader.onCompleteAll = () => {\n          console.log('complete');\n        };\n      });\n    }\n\n    uploadAttachments(filesList) {\n      let files = filesList;\n      let formData = new FormData();\n      files.forEach(file => {\n        formData.append('file[]', file._file);\n      });\n      this.cardService.uploadFiles(this.data.id, formData).subscribe(apiResponse => {\n        this.notificationService.open(apiResponse.message);\n        this.findCardById();\n      }, error => {\n        this.notificationService.open(error, 'failed');\n      });\n    }\n\n    formatBytes(bytes, decimals) {\n      if (bytes == 0) return '0 Bytes';\n      const k = 1024,\n            dm = decimals || 2,\n            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n    deleteAttachmentById(idAttachment) {\n      this.cardService.deleteAttachmentById(this.data.id, idAttachment).subscribe(apiResponse => {\n        this.notificationService.open(apiResponse.message);\n        this.findCardById();\n      }, error => {\n        this.notificationService.open(error, 'failed');\n      });\n    }\n\n    findCardById() {\n      this.cardService.findById(this.data.id).subscribe(card => {\n        this.card = card;\n        const attachments = card.attachments;\n        attachments.forEach(attachment => {\n          let extension = attachment.name.split('.').pop();\n          this.attachmentExtensions.push(extension);\n        });\n      });\n    }\n\n    updateCardDescription() {\n      this.cardService.updateDescription(this.data.id, this.cardUpdate).subscribe(apiResponse => {\n        this.notificationService.open(apiResponse.message);\n        this.IsShown = false;\n        this.findCardById();\n      }, error => {\n        this.notificationService.open(error, 'failed');\n      });\n    }\n\n    setCover(cardId, idAttachment) {\n      this.cardService.setCover(cardId, idAttachment).subscribe(apiResponse => {\n        this.notificationService.open(apiResponse.message);\n        this.findCardById();\n      }, error => {\n        this.notificationService.open(error, 'failed');\n      });\n    }\n\n    removeCover(cardId, idAttachment) {\n      this.cardService.removeCover(cardId, idAttachment).subscribe(apiResponse => {\n        this.notificationService.open(apiResponse.message);\n        this.findCardById();\n      }, error => {\n        this.notificationService.open(error, 'failed');\n      });\n    }\n\n    closeCardForm(cardDescription) {\n      this.cardUpdate.description = cardDescription;\n      this.IsShown = false;\n    }\n\n    toggleTextareaForm() {\n      this.IsShown = !this.IsShown;\n      this.IsShown = false;\n    }\n\n  }\n\n  CardDetailsComponent.ɵfac = function CardDetailsComponent_Factory(t) {\n    return new (t || CardDetailsComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.CardService), i0.ɵɵdirectiveInject(i2.NotificationService));\n  };\n\n  CardDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardDetailsComponent,\n    selectors: [[\"app-card-details\"]],\n    decls: 35,\n    vars: 7,\n    consts: [[\"fxLayout\", \"row\"], [\"fxFlex.xl\", \"700px\", \"fxFlex.lg\", \"700px\", \"fxFlex.md\", \"500px\", \"fxFlex.sm\", \"400px\", 1, \"card\"], [\"mat-dialog-title\", \"\", \"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayoutAlign.xs\", \"center center\"], [\"fxFlex\", \"\", 1, \"card__header\"], [1, \"card__title\"], [1, \"card__subtitle\"], [\"fxLayout\", \"column\", 1, \"card__body\"], [1, \"material-icons\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start\", 1, \"card__content\", 3, \"ngSubmit\"], [\"cardForm\", \"ngForm\"], [\"fxFlex\", \"\"], [\"name\", \"description\", \"InputTextFilter\", \"\", \"matInput\", \"\", 3, \"ngModel\", \"value\", \"focus\", \"ngModelChange\"], [\"description\", \"ngModel\"], [\"class\", \"margin-bottom\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"flex-start flex-start\"], [\"hidden\", \"\", \"type\", \"file\", \"multiple\", \"\", \"name\", \"photo\", \"ng2FileSelect\", \"\", 3, \"uploader\"], [\"fileInput\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"card__content\"], [\"class\", \"card__item\", 4, \"ngFor\", \"ngForOf\"], [1, \"margin-bottom\"], [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"button\", 1, \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [1, \"card__item\"], [\"fxLayout.xs\", \"column\", \"fxLayoutAlign.xs\", \"center center\", \"fxFlex\", \"\"], [\"fxFlex\", \"100px\"], [\"class\", \"card__avatar\", 3, \"src\", 4, \"ngIf\", \"ngIfElse\"], [\"second\", \"\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\", 1, \"card__content\"], [\"mat-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [1, \"card__avatar\", 3, \"src\"], [\"fxLayoutAlign\", \"center center\"]],\n    template: function CardDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r24 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"h4\", 5);\n        i0.ɵɵtext(7, \" In list \");\n        i0.ɵɵelementStart(8, \"strong\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"mat-dialog-content\", 6)(11, \"div\", 0)(12, \"span\", 7);\n        i0.ɵɵtext(13, \" description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"h3\", 4);\n        i0.ɵɵtext(15, \"Description\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function CardDetailsComponent_Template_form_ngSubmit_16_listener() {\n          return ctx.updateCardDescription();\n        });\n        i0.ɵɵelementStart(18, \"mat-form-field\", 10)(19, \"textarea\", 11, 12);\n        i0.ɵɵlistener(\"focus\", function CardDetailsComponent_Template_textarea_focus_19_listener() {\n          return ctx.IsShown = true;\n        })(\"ngModelChange\", function CardDetailsComponent_Template_textarea_ngModelChange_19_listener($event) {\n          return ctx.cardUpdate.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, CardDetailsComponent_div_21_Template, 9, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 14)(23, \"span\", 7);\n        i0.ɵɵtext(24, \" attach_file \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"h3\", 4);\n        i0.ɵɵtext(26, \"Attachments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15, 16);\n        i0.ɵɵelementStart(29, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function CardDetailsComponent_Template_button_click_29_listener() {\n          i0.ɵɵrestoreView(_r24);\n\n          const _r3 = i0.ɵɵreference(28);\n\n          return _r3.click();\n        });\n        i0.ɵɵelementStart(30, \"mat-icon\");\n        i0.ɵɵtext(31, \"add_box\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(32, \" Add a pic \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"mat-list\", 18);\n        i0.ɵɵtemplate(34, CardDetailsComponent_mat_list_item_34_Template, 19, 9, \"mat-list-item\", 19);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.card.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.data.column);\n        i0.ɵɵadvance(10);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.card.description);\n        i0.ɵɵproperty(\"ngModel\", ctx.cardUpdate.description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.IsShown === true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"uploader\", ctx.uploader);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.card.attachments);\n      }\n    },\n    directives: [i3.DefaultLayoutDirective, i3.DefaultFlexDirective, i4.MatDialogTitle, i3.DefaultLayoutAlignDirective, i4.MatDialogContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.MatFormField, i7.MatInput, i5.DefaultValueAccessor, i8.InputTextFilterDirective, i5.NgControlStatus, i5.NgModel, i9.NgIf, i10.MatButton, i11.MatIcon, i12.FileSelectDirective, i13.MatList, i9.NgForOf, i13.MatListItem],\n    pipes: [i9.DatePipe],\n    styles: [\".card__content[_ngcontent-%COMP%], .card__header[_ngcontent-%COMP%]{white-space:normal!important;word-break:break-word}.card__avatar[_ngcontent-%COMP%]{width:100px;height:100px;border-radius:50%;-o-object-fit:cover;object-fit:cover}.card__header[_ngcontent-%COMP%]{padding-left:10px}.card__body[_ngcontent-%COMP%]{padding:10px}.card__title[_ngcontent-%COMP%]{font-size:1.2rem}.card__subtitle[_ngcontent-%COMP%]{font-size:1rem}.card__content[_ngcontent-%COMP%]{padding:10px}.card__item[_ngcontent-%COMP%]{height:auto;padding-top:10px}\"]\n  });\n  return CardDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}