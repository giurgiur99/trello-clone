{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    findById(url, body = {}) {\n      return this.http.get(url, body).pipe(catchError(this.handlerError));\n    }\n\n    put(url, body = {}) {\n      return this.http.put(url, body).pipe(catchError(this.handlerError));\n    }\n\n    post(url, body = {}) {\n      return this.http.post(url, body).pipe(catchError(this.handlerError));\n    }\n\n    deleteById(url) {\n      return this.http.delete(url).pipe(catchError(this.handlerError));\n    }\n\n    handlerError(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        errorMessage = `Error code: ${error.status}\n      Message: ${error.error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}