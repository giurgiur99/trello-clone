{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ConfirmDialogRequest } from 'src/app/core/interface/core.interface';\nimport { ConfirmDialogComponent } from 'src/app/shared/component/confirm-dialog/confirm-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/modules/user/shared/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/modules/board-details/share/boards-details.service\";\nimport * as i4 from \"src/app/shared/component/form-name-dialog/form-name-dialog.service\";\nimport * as i5 from \"src/app/core/services/notification.service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/material/list\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\n\nconst _c0 = function (a1) {\n  return [\"/b\", a1];\n};\n\nfunction BoardsComponent_mat_list_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\", 4)(1, \"div\", 5)(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function BoardsComponent_mat_list_item_2_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const board_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.updateBoard(board_r1.id, board_r1.name);\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \" short_text\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function BoardsComponent_mat_list_item_2_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const board_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.deleteBoard(board_r1.id);\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"delete_forever\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const board_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, board_r1.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", board_r1.name, \" \");\n  }\n}\n\nexport let BoardsComponent = /*#__PURE__*/(() => {\n  class BoardsComponent {\n    constructor(userService, activatedRoute, boardService, formNameDialogService, notificationService, dialog) {\n      this.userService = userService;\n      this.activatedRoute = activatedRoute;\n      this.boardService = boardService;\n      this.formNameDialogService = formNameDialogService;\n      this.notificationService = notificationService;\n      this.dialog = dialog;\n      this.username = '';\n      this.id = '';\n      this.boards = [];\n    }\n\n    ngOnInit() {\n      this.activatedRoute.parent.params.subscribe(params => {\n        this.username = params['username'];\n      });\n      this.currentUser();\n      this.findBoardsByUsername();\n    }\n\n    findBoardsByUsername() {\n      this.userService.findBoardsByUsername(this.username).subscribe(boards => {\n        this.boards = boards;\n      });\n    }\n\n    currentUser() {\n      this.userService.currentUser().subscribe(user => {\n        this.id = user.id;\n      });\n    }\n\n    saveBoard() {\n      this.formNameDialogService.confirmed().then(name => __awaiter(this, void 0, void 0, function* () {\n        if (name) {\n          this.boardService.saveName(name).subscribe(apiResponse => {\n            this.findBoardsByUsername();\n            this.notificationService.open(apiResponse.message);\n          }, error => {\n            this.notificationService.open(error, 'failed');\n          });\n        }\n      }));\n    }\n\n    deleteBoard(id) {\n      const message = `Are you sure you want to do this?\n    If you have Cards and Attachments, they will be permanently deleted.`;\n      const dialogData = new ConfirmDialogRequest(\"Confirm Action\", message);\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: \"400px\",\n        data: dialogData\n      });\n      dialogRef.afterClosed().subscribe(data => {\n        if (data) {\n          this.boardService.deleteById(id).subscribe(apiResponse => {\n            this.findBoardsByUsername();\n            this.notificationService.open(apiResponse.message);\n          }, error => {\n            this.notificationService.open(error, 'failed');\n          });\n        }\n      });\n    }\n\n    updateBoard(id, name) {\n      this.formNameDialogService.confirmed(name).then(board => __awaiter(this, void 0, void 0, function* () {\n        if (board) {\n          this.boardService.updateName(id, board).subscribe(apiResponse => {\n            this.findBoardsByUsername();\n            this.notificationService.open(apiResponse.message);\n          }, error => {\n            this.notificationService.open(error, 'failed');\n          });\n        }\n      }));\n    }\n\n  }\n\n  BoardsComponent.ɵfac = function BoardsComponent_Factory(t) {\n    return new (t || BoardsComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.BoardDetailsService), i0.ɵɵdirectiveInject(i4.FormNameDialogService), i0.ɵɵdirectiveInject(i5.NotificationService), i0.ɵɵdirectiveInject(i6.MatDialog));\n  };\n\n  BoardsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardsComponent,\n    selectors: [[\"app-boards\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"container\"], [\"fxLayoutGap\", \"2px\", 1, \"list\"], [\"class\", \"list__item\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"fxFlex\", \"\", 1, \"button\", 3, \"click\"], [1, \"list__item\"], [\"fxFlex\", \"90\", 1, \"cursor-pointer\", 3, \"routerLink\"], [\"fxFlex\", \"\", \"fxLayoutAlign\", \"center center\", 1, \"buttons\"], [\"mat-button\", \"\", \"color\", \"accent\", 1, \"buttons--custom\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", 1, \"buttons--custom\", 3, \"click\"]],\n    template: function BoardsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-list\", 1);\n        i0.ɵɵtemplate(2, BoardsComponent_mat_list_item_2_Template, 11, 4, \"mat-list-item\", 2);\n        i0.ɵɵelementStart(3, \"div\")(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function BoardsComponent_Template_button_click_4_listener() {\n          return ctx.saveBoard();\n        });\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"add_box\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\");\n        i0.ɵɵtext(8, \"Add new Board\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.boards);\n      }\n    },\n    directives: [i7.MatList, i8.DefaultLayoutGapDirective, i9.NgForOf, i7.MatListItem, i8.DefaultFlexDirective, i2.RouterLink, i10.MatCardTitle, i8.DefaultLayoutAlignDirective, i11.MatButton, i12.MatIcon],\n    styles: [\".list[_ngcontent-%COMP%]{display:flex;width:auto;height:auto}.list__item[_ngcontent-%COMP%]{width:auto!important;background-color:var(--main-color);border-radius:3px;box-shadow:0 5px 15px #00000080;cursor:pointer}.buttons[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:nth-of-type(1){margin-left:14px}.buttons--custom[_ngcontent-%COMP%]{min-width:0px;padding:0;height:48px}.button[_ngcontent-%COMP%]{height:48px;box-shadow:0 5px 15px #00000080}\"]\n  });\n  return BoardsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}